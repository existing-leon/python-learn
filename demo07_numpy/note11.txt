Numpy 中包含了一些函数用于处理数组，大概可分为以下几类：
    修改数组形状
    翻转数组
    修改数组维度
    连接数组
    分割数组
    数组元素的添加与删除

修改数组形状
    函数	描述
    reshape	不改变数据的条件下修改形状
    flat	数组元素迭代器
    flatten	返回一份数组拷贝，对拷贝所做的修改不会影响原始数组
    ravel	返回展开数组
    numpy.reshape
    numpy.reshape 函数可以在不改变数据的条件下修改形状，格式如下：
    * numpy.reshape(arr, newshape, order='C')
        arr：要修改形状的数组
        newshape：整数或者整数数组，新的形状应当兼容原有形状
        order：'C' -- 按行，'F' -- 按列，'A' -- 原顺序，'k' -- 元素在内存中的出现顺序。

numpy.ndarray.flat
numpy.ndarray.flat 是一个数组元素迭代器

numpy.ndarray.flatten
numpy.ndarray.flatten 返回一份数组拷贝，对拷贝所做的修改不会影响原始数组，格式如下：
    * ndarray.flatten(order='C')
    参数说明：
        order：'C' -- 按行，'F' -- 按列，'A' -- 原顺序，'K' -- 元素在内存中的出现顺序。

numpy.ravel
numpy.ravel() 展平的数组元素，顺序通常是"C风格"，
返回的是数组视图（view，有点类似 C/C++引用reference的意味），修改会影响原始数组。
该函数接收两个参数：
    * numpy.ravel(a, order='C')
    参数说明：
        order：'C' -- 按行，'F' -- 按列，'A' -- 原顺序，'K' -- 元素在内存中的出现顺序。

翻转数组
    函数	描述
    transpose	对换数组的维度
    ndarray.T	和 self.transpose() 相同
    rollaxis	向后滚动指定的轴
    swapaxes	对换数组的两个轴
numpy.transpose
numpy.transpose 函数用于对换数组的维度，格式如下：
    * numpy.transpose(arr, axes)
    参数说明:
        arr：要操作的数组
        axes：整数列表，对应维度，通常所有维度都会对换。

numpy.ndarray.T 类似 numpy.transpose

numpy.rollaxis
numpy.rollaxis 函数向后滚动特定的轴到一个特定位置，格式如下：
    * numpy.rollaxis(arr, axis, start)
    参数说明：
        arr：数组
        axis：要向后滚动的轴，其它轴的相对位置不会改变
        start：默认为零，表示完整的滚动。会滚动到特定位置。

numpy.swapaxes
numpy.swapaxes 函数用于交换数组的两个轴，格式如下：
    * numpy.swapaxes(arr, axis1, axis2)
        arr：输入的数组
        axis1：对应第一个轴的整数
        axis2：对应第二个轴的整数

修改数组维度
    维度	描述
    broadcast	产生模仿广播的对象
    broadcast_to	将数组广播到新形状
    expand_dims	扩展数组的形状
    squeeze	从数组的形状中删除一维条目
    * numpy.broadcast
    numpy.broadcast 用于模仿广播的对象，它返回一个对象，该对象封装了将一个数组广播到另一个数组的结果。

numpy.broadcast_to
numpy.broadcast_to 函数将数组广播到新形状。它在原始数组上返回只读视图。 它通常不连续。
如果新形状不符合 NumPy 的广播规则，该函数可能会抛出ValueError。
    * numpy.broadcast_to(array, shape, subok)

numpy.expand_dims
numpy.expand_dims 函数通过在指定位置插入新的轴来扩展数组形状，函数格式如下:
    * numpy.expand_dims(arr, axis)
    参数说明：
        arr：输入数组
        axis：新轴插入的位置

numpy.squeeze
numpy.squeeze 函数从给定数组的形状中删除一维的条目，函数格式如下：
    * numpy.squeeze(arr, axis)
    参数说明：
        arr：输入数组
        axis：整数或整数元组，用于选择形状中一维条目的子集

连接数组
    函数	描述
    concatenate	连接沿现有轴的数组序列
    stack	沿着新的轴加入一系列数组。
    hstack	水平堆叠序列中的数组（列方向）
    vstack	竖直堆叠序列中的数组（行方向）
    numpy.concatenate
    numpy.concatenate 函数用于沿指定轴连接相同形状的两个或多个数组，格式如下：
    * numpy.concatenate((a1, a2, ...), axis)
    参数说明：
    a1, a2, ...：相同类型的数组
    axis：沿着它连接数组的轴，默认为 0

numpy.stack
numpy.stack 函数用于沿新轴连接数组序列，格式如下：
    * numpy.stack(arrays, axis)
    参数说明：
    arrays相同形状的数组序列
    axis：返回数组中的轴，输入数组沿着它来堆叠

numpy.hstack
numpy.hstack 是 numpy.stack 函数的变体，它通过水平堆叠来生成数组。

numpy.vstack
numpy.vstack 是 numpy.stack 函数的变体，它通过垂直堆叠来生成数组。

分割数组
    函数	数组及操作
    split	将一个数组分割为多个子数组
    hsplit	将一个数组水平分割为多个子数组（按列）
    vsplit	将一个数组垂直分割为多个子数组（按行）
numpy.split
numpy.split 函数沿特定的轴将数组分割为子数组，格式如下：
    * numpy.split(ary, indices_or_sections, axis)
    参数说明：
    ary：被分割的数组
    indices_or_sections：如果是一个整数，就用该数平均切分，如果是一个数组，为沿轴切分的位置（左开右闭）
    axis：设置沿着哪个方向进行切分，默认为 0，横向切分，即水平方向。为 1 时，纵向切分，即竖直方向。

数组元素的添加与删除
    函数	元素及描述
    resize	返回指定形状的新数组
    append	将值添加到数组末尾
    insert	沿指定轴将值插入到指定下标之前
    delete	删掉某个轴的子数组，并返回删除后的新数组
    unique	查找数组内的唯一元素
numpy.resize
numpy.resize 函数返回指定大小的新数组。
如果新数组大小大于原始大小，则包含原始数组中的元素的副本。
    * numpy.resize(arr, shape)
    参数说明：
        arr：要修改大小的数组
        shape：返回数组的新形状

numpy.append
numpy.append 函数在数组的末尾添加值。 追加操作会分配整个数组，并把原来的数组复制到新数组中。
此外，输入数组的维度必须匹配否则将生成ValueError。
append 函数返回的始终是一个一维数组。
    * numpy.append(arr, values, axis=None)
    参数说明：
        arr：输入数组
        values：要向arr添加的值，需要和arr形状相同（除了要添加的轴）
        axis：默认为 None。当axis无定义时，是横向加成，返回总是为一维数组！当axis有定义的时候，
        分别为0和1的时候。当axis有定义的时候，分别为0和1的时候（列数要相同）。当axis为1时，数组是加在右边（行数要相同）。

numpy.insert
numpy.insert 函数在给定索引之前，沿给定轴在输入数组中插入值。
函数会在指定位置（或位置数组）插入给定的值或数组，然后返回新的数组。被插入的元素可以是标量值，也可以是数组。
需要注意的是，插入操作会返回一个新的数组，而不会改变原始数组。
    * numpy.insert(arr, obj, values, axis)
    参数说明：
        arr：输入数组
        obj：在其之前插入值的索引
        values：要插入的值
        axis：沿着它插入的轴，如果未提供，则输入数组会被展开