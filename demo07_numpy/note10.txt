NumPy 迭代器对象 numpy.nditer 提供了一种灵活访问一个或者多个数组元素的方式。
迭代器最基本的任务的可以完成对数组元素的访问。

a 和 a.T 的遍历顺序是一样的，也就是他们在内存中的存储顺序也是一样的，但是 a.T.copy(order = 'C')
的遍历结果是不同的，那是因为它和前两种的存储方式是不一样的，默认是按行访问。

控制遍历顺序
    for x in np.nditer(a, order='F'):Fortran order，即是列序优先；
    for x in np.nditer(a.T, order='C'):C order，即是行序优先；

可以通过显式设置，来强制 nditer 对象使用某种顺序：

修改数组中元素的值
nditer 对象有另一个可选参数 op_flags。
 默认情况下，nditer 将视待迭代遍历的数组为只读对象（read-only），
 为了在遍历数组的同时，实现对数组元素值的修改，必须指定 readwrite 或者 writeonly 的模式。

使用外部循环
nditer 类的构造器拥有 flags 参数，它可以接受下列值：
    参数	描述
    c_index	可以跟踪 C 顺序的索引
    f_index	可以跟踪 Fortran 顺序的索引
    multi_index	每次迭代可以跟踪一种索引类型
    external_loop	给出的值是具有多个值的一维数组，而不是零维数组

广播迭代
如果两个数组是可广播的，nditer 组合对象能够同时迭代它们。
假设数组 a 的维度为 3X4，数组 b 的维度为 1X4 ，则使用以下迭代器（数组 b 被广播到 a 的大小）。